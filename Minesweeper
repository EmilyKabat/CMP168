package project;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.*;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.ImageIcon;
import java.awt.Color;
import javax.swing.*;

public class Gui extends Grid {
    public static int lost;
    public static boolean[][] revealedCells;
    public static void zeroCell(int row, int column, Grid bombGrid, JFrame appFrame) {
        for (int i = -1; i < 2; i++) {
            for (int j = -1; j < 2; j++) {
                if (!(i == 0 && j == 0) && row + i >= 0 && row + i < bombGrid.getNumRows() && column + j >= 0 && column + j < bombGrid.getNumColumns() && !revealedCells[row + i][column + j]) {
                    JButton circaZero = new JButton();
                    circaZero.setBounds((row + i) * 50, (column + j) * 50, 50, 50);
                    revealCell(circaZero, appFrame, bombGrid);
                }
            }
        }
    }

    public static void revealCell(JButton emptyCell, JFrame appFrame, Grid bombGrid) {
        int row = emptyCell.getLocation().x / 50;
        int column = emptyCell.getLocation().y / 50;
        revealedCells[row][column] = true;
        String a = Integer.toString(bombGrid.getCountAtLocation(row, column));
        JButton dig = new JButton(a);
        dig.setText(a);
        dig.setBounds(row * 50, column * 50, 50, 50);
        dig.setVisible(true);
        appFrame.add(dig);
        if (bombGrid.isBombAtLocation((row), column)) {
            lost++;
            dig.setText("Bomb");
            dig.setVisible(true);
            dig.setBackground(Color.RED);
            dig.setOpaque(true);
            JFrame mainFrame = new JFrame("Game Over");
            mainFrame.setSize(400, 400);
            int input = JOptionPane.showOptionDialog(null, "You lost. Would you like to play again?", "Game Over", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
            if (input == JOptionPane.OK_OPTION) {
                appFrame.setVisible(false);
                createGame();
            }
        }
        else {
            numFlags--;
            numToWin++;
            dig.setText(a);
            dig.setBackground(Color.GREEN);
            dig.setOpaque(true);
            if (bombGrid.getCountAtLocation(row, column) == 0) {
                dig.setText(a);
                zeroCell(row, column, bombGrid, appFrame);
            }
            if (numToWin == bombGrid.getNumColumns() * bombGrid.getNumRows() - bombGrid.getNumBombs() && lost == 0) {
                JFrame mainFrame = new JFrame("Game Over");
                mainFrame.setSize(400,400);
                int input = JOptionPane.showOptionDialog(null, "You won! Would you like to play again?", "Game Over", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
                if (input == JOptionPane.OK_OPTION) {
                    appFrame.setVisible(false);
                    createGame();
                }
            }
        }
        dig.setVisible(true);
    }
    public static void addFlag(JButton emptyCell, JFrame appFrame, Grid bombGrid) {
        ImageIcon redFlag = new ImageIcon("redflag.png");
        JButton flag = new JButton(redFlag);
        flag.setIcon(redFlag);
        flag.setBounds(emptyCell.getLocation().x, emptyCell.getLocation().y, 50, 50);
        flag.setVisible(true);
        appFrame.add(flag);
        emptyCell.setVisible(false);
        numFlags++;
        flag.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                flag.setVisible(false);
                revealCell(emptyCell, appFrame, bombGrid);
            }
        });
    }
    public static void createGame() {
        lost = 0;
        Grid bombGrid = new Grid(14, 14, 40);
        revealedCells = new boolean[bombGrid.getNumColumns()][bombGrid.getNumRows()];
        for (int i = 0; i < bombGrid.getNumRows(); i++) {
            for (int j = 0; j < bombGrid.getNumColumns(); j++) {
                revealedCells[i][j] = false;
            }
        }
        JFrame appFrame = new JFrame();
        appFrame.setSize(bombGrid.getNumColumns() * 50, bombGrid.getNumRows() * 50 + 20);
        appFrame.setTitle("MineSweeper");
        appFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        for (int i = 0; i < bombGrid.getNumRows(); i++) {
            for (int j = 0; j < bombGrid.getNumColumns(); j++) {
                JButton emptyCell = new JButton();
                emptyCell.setBounds(i * 50, j * 50, 50, 50);
                emptyCell.setVisible(true);
                if (i == bombGrid.getNumRows() || j == bombGrid.getNumColumns()) {
                    emptyCell.setVisible(false);
                }
                appFrame.add(emptyCell);
                appFrame.setLayout(null);
                emptyCell.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        addFlag(emptyCell, appFrame, bombGrid);
                    }
                });
            }
        }
        appFrame.setVisible(true);

    }

    public static void main(String[] args) {
        createGame();
    }

}
