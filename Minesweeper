package project;

import java.lang.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JTextField;
import java.applet.Applet;
import java.awt.Button;
import java.awt.Color;
import java.awt.event.*;

public class Grid {
    private boolean[][] bombGrid;
    private int[][] countGrid;
    private int numRows;
    private int numColumns;
    private int numBombs;

    public void Grid() {
        this.numRows = 10;
        this.numColumns = 10;
        this.bombGrid = new boolean[10][10];
        this.countGrid = new int[10][10];
        this.numBombs = 25;
        createBombGrid();
        createCountGrid();
    }

    public void Grid(int rows, int columns) {
        this.numRows = rows;
        this.numColumns = columns;
        this.bombGrid = new boolean[rows][columns];
        this.countGrid = new int[rows][columns];
        this.numBombs = 25;
        createBombGrid();
        createCountGrid();
    }

    public void Grid(int rows, int columns, int numBombs) {
        this.numRows = rows;
        this.numColumns = columns;
        this.bombGrid = new boolean[rows][columns];
        this.countGrid = new int[rows][columns];
        this.numBombs = numBombs;
        createBombGrid();
        createCountGrid();
    }

    public void createBombGrid() {
        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < numColumns; j++) {
                bombGrid[i][j] = false;
            }
        }
        for (int i = 0; i < numBombs; i++) {
            int rand1 = (int) (Math.random() * 10);
            int rand2 = (int) (Math.random() * 10);
            if (rand1 < numRows && rand2 < numColumns) {
                if (bombGrid[rand1][rand2]) {
                    i--;
                } else {
                    bombGrid[rand1][rand2] = true;
                }
            }
            else {
                i--;
            }
        }
        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < numColumns; j++) {
                System.out.print(bombGrid[i][j] + " ");
            }
            System.out.println();
        }
    }

    public int getCountAtLocation(int row, int column) {
        int bombCount = 0;
        if (row > 0 && column < numColumns - 1 && bombGrid[row - 1][column + 1] == true) {
            bombCount++;
        }
        if (column < numColumns - 1 && bombGrid[row][column + 1] == true) {
            bombCount++;
        }
        if (row < numRows - 1 && column < numColumns - 1 && bombGrid[row + 1][column + 1] == true) {
            bombCount++;
        }
        if (row > 0 && bombGrid[row - 1][column] == true) {
            bombCount++;
        }
        if (bombGrid[row][column] == true) {
            bombCount++;
        }
        if (row < numRows - 1 && bombGrid[row + 1][column] == true) {
            bombCount++;
        }
        if (row > 0 && column > 0 && bombGrid[row - 1][column - 1] == true) {
            bombCount++;
        }
        if (column > 0 && bombGrid[row][column - 1] == true) {
            bombCount++;
        }
        if (row < numRows - 1 && column > 0 && bombGrid[row + 1][column - 1] == true) {
            bombCount++;
        }
        return bombCount;
    }

    public void createCountGrid() {
        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < numColumns; j++) {
                countGrid[i][j] = getCountAtLocation(i, j);
                System.out.print(countGrid[i][j] + " ");
            }
            System.out.println();
        }
    }

    public int getNumRows() {
        return this.numRows;
    }

    public int getNumColumns() {
        return this.numColumns;
    }

    public int getNumBombs() {
        return this.numBombs;
    }

    public boolean[][] getBombGrid() {
        return this.bombGrid;
    }

    public int[][] getCountGrid() {
        return this.countGrid;
    }

    public boolean isBombAtLocation(int row, int column) {
        return bombGrid[row][column];
    }

    public static void main(String[] args) {
        Grid bombGrid = new Grid();
        bombGrid.Grid(5, 5, 3);

        JFrame appFrame = new JFrame();
        appFrame.setSize(bombGrid.numColumns * 60 + 150, bombGrid.numRows * 60);
        appFrame.setTitle("Grid");
        appFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JTextField tf=new JTextField();
        Grid bombGrid2 = new Grid();
        bombGrid2.Grid(bombGrid.numRows + 1, bombGrid.numColumns + 1);
        for (int i = 0; i < bombGrid.numRows; i++) {
            for (int j = 0; j < bombGrid.numColumns; j++) {
                bombGrid2.bombGrid[i][j] = bombGrid.bombGrid[i][j];
            }
        }
        for (int i = 0; i < bombGrid2.numRows; i++) {
            bombGrid2.bombGrid[bombGrid.numRows][i] = false;
        }
        for (int i = 0; i < bombGrid2.numColumns; i++) {
            bombGrid2.bombGrid[i][bombGrid.numColumns] = false;
        }

        for (int i = 0; i < bombGrid2.numRows; i++) {
            for (int j = 0; j < bombGrid2.numColumns; j++) {
                JButton dig = new JButton("Dig");
                dig.setBounds(i * 50, j * 50, 50, 50);
                dig.setVisible(true);
                if (i == bombGrid.numRows || j == bombGrid.numColumns) {
                    dig.setVisible(false);
                }
                appFrame.add(dig);
                JButton bomb = new JButton("You lost. Would you like to play again?");
                bomb.setBounds(bombGrid.numColumns * 50 + 10, 0, 140, 200);
                bomb.setVisible(false);
                appFrame.add(bomb);
                int numToWin = 0;
                dig.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        if (bombGrid.bombGrid[(int) (dig.getLocation().y / 50)][(int) (dig.getLocation().x / 50)]) {
                            dig.setText("Bomb");
                            bomb.setVisible(true);
                            dig.setBackground(Color.RED);
                            dig.setOpaque(true);
//                            if (numClicks == 0) {
//                               figure out how to make the first click one you can't die on
//                            }
                        }
                        else {
//                            System.out.println(numToWin);
//                            numToWin++;
                            dig.setText(Integer.toString(bombGrid.countGrid[(int) (dig.getLocation().y / 50)][(int) (dig.getLocation().x / 50)]));
                            dig.setBackground(Color.GREEN);
                            dig.setOpaque(true);
                            System.out.println(numToWin);
                        }
                        int a = (bombGrid.numColumns * bombGrid.numRows) - bombGrid.numBombs;
                        System.out.println("NumToWin: " + a);
                        System.out.println("Your number: " + numToWin);
                        if (numToWin == (bombGrid.numColumns * bombGrid.numRows) - bombGrid.numBombs) {
                            bomb.setVisible(true);
                            bomb.setText("YOU WIN!!!");
                        }
                    }
                });
            }
        }
        appFrame.setVisible(true);
    }

}
