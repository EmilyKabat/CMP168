import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.*;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.ImageIcon;
import java.awt.Color;

public class Grid {
    private boolean[][] bombGrid;
    private int[][] countGrid;
    private int numRows;
    private int numColumns;
    private int numBombs;
    static int numToWin = 0;
    static int numFlags = 0;

    public Grid() {
        this.numRows = 10;
        this.numColumns = 10;
        this.bombGrid = new boolean[10][10];
        this.countGrid = new int[10][10];
        this.numBombs = 25;
        createBombGrid();
        createCountGrid();
    }

    public Grid(int rows, int columns) {
        this.numRows = rows;
        this.numColumns = columns;
        this.bombGrid = new boolean[rows][columns];
        this.countGrid = new int[rows][columns];
        this.numBombs = 25;
        createBombGrid();
        createCountGrid();
    }

    public Grid(int rows, int columns, int numBombs) {
        this.numRows = rows;
        this.numColumns = columns;
        this.bombGrid = new boolean[rows][columns];
        this.countGrid = new int[rows][columns];
        this.numBombs = numBombs;
        createBombGrid();
        createCountGrid();
    }

    public void createBombGrid() {
        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < numColumns; j++) {
                bombGrid[i][j] = false;
            }
        }
        for (int i = 0; i < numBombs; i++) {
            int rand1 = (int) (Math.random() * numRows);
            int rand2 = (int) (Math.random() * numColumns);
            if (bombGrid[rand1][rand2]) {
                i--;
            } else {
                bombGrid[rand1][rand2] = true;
            }
        }
        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < numColumns; j++) {
                System.out.print(bombGrid[i][j] + " ");
            }
            System.out.println();
        }
    }

    public int getCountAtLocation(int row, int column) {
        int bombCount = 0;
        if (row > 0 && column < numColumns - 1 && bombGrid[row - 1][column + 1] == true) {
            bombCount++;
        }
        if (column < numColumns - 1 && bombGrid[row][column + 1] == true) {
            bombCount++;
        }
        if (row < numRows - 1 && column < numColumns - 1 && bombGrid[row + 1][column + 1] == true) {
            bombCount++;
        }
        if (row > 0 && bombGrid[row - 1][column] == true) {
            bombCount++;
        }
        if (bombGrid[row][column] == true) {
            bombCount++;
        }
        if (row < numRows - 1 && bombGrid[row + 1][column] == true) {
            bombCount++;
        }
        if (row > 0 && column > 0 && bombGrid[row - 1][column - 1] == true) {
            bombCount++;
        }
        if (column > 0 && bombGrid[row][column - 1] == true) {
            bombCount++;
        }
        if (row < numRows - 1 && column > 0 && bombGrid[row + 1][column - 1] == true) {
            bombCount++;
        }
        return bombCount;
    }

    public void createCountGrid() {
        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < numColumns; j++) {
                countGrid[i][j] = getCountAtLocation(i, j);
                System.out.print(countGrid[i][j] + " ");
            }
            System.out.println();
        }
    }

    public int getNumRows() {
        return this.numRows;
    }

    public int getNumColumns() {
        return this.numColumns;
    }

    public int getNumBombs() {
        return this.numBombs;
    }

    public boolean[][] getBombGrid() {
        return this.bombGrid;
    }

    public int[][] getCountGrid() {
        return this.countGrid;
    }

    public boolean isBombAtLocation(int row, int column) {
        return bombGrid[row][column];
    }

    public static void main(String[] args) {
        Grid bombGrid = new Grid(14, 14, 40);
        JFrame appFrame = new JFrame();
        appFrame.setSize(bombGrid.getNumColumns() * 60 + 150, bombGrid.getNumRows() * 60);
        appFrame.setTitle("Grid");
        appFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JTextField tf=new JTextField();
//        Grid bombGrid2 = new Grid(bombGrid.getNumRows() + 1, bombGrid.getNumColumns() + 1);
//        for (int i = 0; i < bombGrid.getNumRows(); i++) {
//            for (int j = 0; j < bombGrid.getNumColumns(); j++) {
//                bombGrid2.bombGrid[i][j] = bombGrid.bombGrid[i][j];
//            }
//        }
//        for (int i = 0; i < bombGrid2.getNumRows(); i++) {
//            bombGrid2.bombGrid[bombGrid.getNumRows()][i] = false;
//        }
//        for (int i = 0; i < bombGrid2.getNumColumns(); i++) {
//            bombGrid2.bombGrid[i][bombGrid.getNumColumns()] = false;
//        }

        for (int i = 0; i < bombGrid.getNumRows(); i++) {
            for (int j = 0; j < bombGrid.getNumColumns(); j++) {
                JButton label = new JButton("Dig");
                label.setBounds(i * 50, j * 50, 50, 50);
                label.setVisible(true);
                if (i == bombGrid.getNumRows() || j == bombGrid.getNumColumns()) {
                    label.setVisible(false);
                }
                appFrame.add(label);
                appFrame.setLayout(null);
                JButton bomb = new JButton("You lost. Would you like to play again?");
                bomb.setBounds(bombGrid.getNumColumns() * 50 + 10, 0, 140, 200);
                bomb.setVisible(false);
                appFrame.add(bomb);
                label.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        ImageIcon redFlag = new ImageIcon("redflag.png");
                        JButton flag = new JButton(redFlag);
                        flag.setIcon(redFlag);
                        flag.setBounds(label.getLocation().x, label.getLocation().y, 50, 50);
                        flag.setVisible(true);
                        appFrame.add(flag);
                        label.setVisible(false);
                        numFlags++;
                        System.out.println("Number of mines identified: " + numFlags + "/" + bombGrid.getNumBombs());
                        flag.addActionListener(new ActionListener() {
                            public void actionPerformed(ActionEvent e) {
                                flag.setVisible(false);
                                JButton dig = new JButton();
                                dig.setBounds(label.getLocation().x, label.getLocation().y, 50, 50);
                                dig.setVisible(true);
                                appFrame.add(dig);
                                dig.setVisible(true);
                                if (bombGrid.isBombAtLocation((int) (label.getLocation().y / 50), (int) (label.getLocation().x / 50))) {
                                    dig.setText("Bomb");
                                    dig.setVisible(true);
                                    dig.setBackground(Color.RED);
                                    dig.setOpaque(true);
                                    bomb.setVisible(true);
                                } else {
                                    numToWin++;
                                    numFlags--;
                                    dig.setText(Integer.toString(bombGrid.getCountAtLocation((int) (label.getLocation().y / 50), (int) (label.getLocation().x / 50))));
                                    dig.setBackground(Color.GREEN);
                                    dig.setOpaque(true);
                                    System.out.println("NumToWin = " + numToWin);
                                    if (numToWin == bombGrid.getNumColumns() * bombGrid.getNumRows() - bombGrid.getNumBombs()) {
                                        bomb.setText("YOU WIN!!!");
                                    }
                                }
                                int a = (bombGrid.getNumColumns() * bombGrid.getNumRows()) - bombGrid.getNumBombs();
                                if (numToWin == (bombGrid.getNumColumns() * bombGrid.getNumRows()) - bombGrid.getNumBombs()) {
                                    bomb.setVisible(true);
                                    bomb.setText("YOU WIN!!!");
                                }
                            }
                        });
                    }
                });
            }
        }
        appFrame.setVisible(true);
    }

}

